{"version":3,"sources":["components/Sign.js","components/Signs.js","data.js","containers/Home.js","containers/Tours.js","containers/Contact.js","containers/App.js","serviceWorker.js","index.js"],"names":["Meta","Card","Sign","_ref","image","title","description","react_default","a","createElement","card","hoverable","style","width","cover","alt","src","Signs","signs","row","map","sign","i","col","xs","sm","md","lr","xl","key","components_Sign","ghostSigns","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","components_Signs","Component","Tours","Contact","Header","Layout","Content","Footer","initialState","theme","route","App","state","containers_Home","containers_Tours","containers_Contact","_this$state","className","layout","position","zIndex","menu","mode","defaultSelectedKeys","lineHeight","Item","padding","renderContent","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a79789c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst Sign = ({ image, title, description}) => {\r\n\treturn (\r\n\t\t<Card\r\n\t\thoverable\r\n\t\tstyle={{ width: 300}}\r\n\t\tcover={<img\r\n\t\t\t\t\talt=\"example\"\r\n\t\t\t\t\tsrc={image}\r\n\t\t\t\t/>}\r\n\t\t>\r\n\t\t\t<Meta\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tdescription={description}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Sign;","import React from 'react';\r\nimport Sign from './Sign';\r\nimport { Row, Col } from 'antd';\r\n\r\nconst Signs = ({ signs }) => {\r\n\treturn (\r\n\t\t/*<div>\r\n\t\t<Sign\r\n\t\t\timage='./images/fernando-venzano-1052414-unsplash.jpg'\r\n\t\t\ttitle='B and C Restaurant Supply'\r\n\t\t\tdescription='Photo by Fernando Venzano on Unsplash'\r\n\t\t/>\r\n\t\t</div>*/\r\n\t\t<div>\r\n\t\t\t<Row>\r\n\t\t\t\t{\r\n\t\t\t\t\tsigns.map((sign, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Col xs={24} sm={12} md={8} lr={6} xl={4} key={i}>\r\n\t\t\t\t\t\t\t\t<Sign\r\n\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\timage={sign.image}\r\n\t\t\t\t\t\t\t\t\ttitle={sign.title}\r\n\t\t\t\t\t\t\t\t\tdescription={sign.description}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Signs;","const ghostSigns = [\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n\t{\r\n\t\timage: './images/fernando-venzano-1052414-unsplash.jpg',\r\n\t\ttitle: 'B and C Restaurant Supply',\r\n\t\tdescription: 'Photo by Fernando Venzano on Unsplash',\r\n\t},\r\n];\r\n\r\nexport default ghostSigns;","import React, { Component } from 'react';\r\nimport Signs from '../components/Signs';\r\nimport data from '../data.js';\r\n\r\nclass Home extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.data = data;\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t//somewhere before he we will get all the ghost signs and pass it to signs\r\n\t\t\t<Signs signs={this.data}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Tours extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>No tours scheduled</h1>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Tours;","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<h1>This is the contact page</h1>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Tours from './Tours';\nimport Contact from './Contact';\n\nimport { Layout, Menu } from 'antd';\n\nconst { Header, Content, Footer } = Layout;\nconst initialState = {\n  theme: 'dark',\n  route: 'home',\n\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  renderContent(route) {\n    switch (route) {\n      case 'home': return(<Home />);\n      case 'tours': return(<Tours />);\n      case 'contact': return(<Contact />);\n      default: return(<h1>Error</h1>);\n    }\n  }\n\n  render() {\n    const { theme, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Layout className=\"layout\">\n          <Header style={{\n              position: 'fixed',\n              zIndex: 1,\n              width: '100%',\n          }}>\n            <Menu\n              theme={theme}\n              mode=\"horizontal\"\n              defaultSelectedKeys={['home']}\n              style={{ lineHeight: '64px' }}\n            >\n              <Menu.Item key=\"home\">Home</Menu.Item>\n              <Menu.Item key=\"tours\">Tours</Menu.Item>\n              <Menu.Item key=\"contact\">Contact</Menu.Item>\n            </Menu>\n          </Header>\n          <Content style={{ padding: '75px 50px' }}>\n            {this.renderContent(route)}\n          </Content>\n          <Footer>\n            <p>Stuart Busilla Â©2018</p>\n          </Footer>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}